update xeo_historico set numero_colocacion = trim (numero_colocacion);

update xeo_historico set transaccion=trim(transaccion);

update xeo_historico set tipo_doc=trim(tipo_doc);

update xeo_historico set tipo_doc=upper(tipo_doc);

update xeo_plandepagos set numero_credito= trim (numero_credito);

update xeo_plandepagos set modo_pago = 'Mensual'
where modo_pago='MENSUAL';

update xeo_plandepagos set modo_pago = 'Bimestral'
where modo_pago='BIMESTRAL';

update xeo_plandepagos set modo_pago = 'Trimestral'
where modo_pago='TRIMESTRAL';

update xeo_plandepagos set modo_pago = 'Semestral'
where modo_pago='SEMESTRAL';

update xeo_plandepagos set modo_pago = 'Anual'
where modo_pago='ANUAL';
	
update xeo_plandepagos 
set numero_credito= 'lib-0001737'
where numero_credito= 'LIB-0001737';

update xeo_historico
set transaccion='CANCELADO'
where numero_colocacion= 'LIB-0001758'
AND CUOTA IS NULL;

update xeo_historico
set transaccion='CANCELADO'
where numero_colocacion= 'LIB-0001765'
AND CUOTA IS NULL;

update xeo_historico
set numero_colocacion= 'LIB- 0001869'
where numero_colocacion= 'LIB-0001869';

update xeo_historico
set transaccion='CANCELADO'
where numero_colocacion= 'LIB-0001878'
AND CUOTA IS NULL;


update xeo_historico
set transaccion='VIGENTE'
where numero_colocacion LIKE '%LIB-0002219%'
AND CUOTA IS NULL;

update xeo_historico
set transaccion='VIGENTE'
where numero_colocacion LIKE '%LIB-0002223%'
AND CUOTA IS NULL;

update xeo_historico
set transaccion='VIGENTE'
where numero_colocacion LIKE '%LIB-0002238%'
AND CUOTA IS NULL;

update xeo_historico
set transaccion='VIGENTE'
where numero_colocacion LIKE '%LIB-0002350%'
AND CUOTA IS NULL;

update xeo_historico
set transaccion='VIGENTE'
where numero_colocacion LIKE '%LIB-0002493%'
AND CUOTA IS NULL;

UPDATE XEO_PLANDEPAGOS
SET TASA_EA=11.3510
WHERE TASA_EA=113510.

UPDATE XEO_PLANDEPAGOS
SET MODO_PAGO='Trimestral'
where modo_pago='TRIMESTREL';

---------------------------------------------------
----m_cli_liquidacion_cuota
---------------------------------------------------

SELECT distinct 'insert into m_cli_liquidacion_cuota (s_tipo_documentoid, s_tipo_movimientoid, s_vigenciavigencia, s_periodoperiodo, estado, creacion, fecha, descripcion, consecutivo) 
values (41, 186, "2017", 1, "Autorizado", "01-01-2017", "'||  xh.fecha_desembolso || '","' || ced_cliente || ' - ' ||
(CASE 
WHEN s_tercero.naturalezajuridica='Natural' 
	THEN s_tercero.nombre1||' '||COALESCE(s_tercero.nombre2,' ')||' '||s_tercero.apellido1||' '||COALESCE(s_tercero.apellido2,' ')
WHEN s_tercero.naturalezajuridica='Juridica' 
	THEN s_tercero.razonsocial
END) || ' - ' || ' - Num.Credito:' || 
xh.numero_colocacion || '",(SELECT to_char(cast(coalesce(max(consecutivo),"0") as int)+1,"FM09999999") from m_cli_liquidacion_cuota));'
from xeo_historico xh
inner join s_tercero on (xh.ced_cliente=s_tercero.numero)
WHERE --(transaccion like '%VIGENTE%' or transaccion like '%CANCELADO%') and
xh.fecha_desembolso IS NOT NULL
and xh.numero_colocacion<>'LIB-0002763'
order by 1 desc 

---------------------------------------------------
---m_cli_comprobante_credito
---------------------------------------------------

SELECT distinct 
'insert into m_cli_comprobante_credito (m_con_centro_contableid, s_tipo_documentoid, s_tipo_movimientoid, s_vigenciavigencia, s_periodoperiodo, 
estadocomprobantecredito, creacion, fecha, descripcion, fecharealdepago,consecutivo,s_terceroid) 
values (1, 42, 187, "2017", 1, "Autorizado","01-01-2017", "'||  xh.fecha_movimiento || '","' || xh.ced_cliente || ' - ' ||
(CASE 
WHEN s_tercero.naturalezajuridica='Natural' 
	THEN s_tercero.nombre1||' '||COALESCE(s_tercero.nombre2,' ')||' '||s_tercero.apellido1||' '||COALESCE(s_tercero.apellido2,' ')
WHEN s_tercero.naturalezajuridica='Juridica' 
	THEN s_tercero.razonsocial
END) || ' - ' ||  ' 0000' || xh.numero_doc || ' - Num.Credito:' || 
xh.numero_colocacion || '","'
||case when 
(xh.numero_colocacion like '%LIB%') then To_char(date_trunc('month',xh.fecha_movimiento)  +'1month' ::interval -'1sec' ::interval, 'yyyy-mm-dd') 
else To_char(date_trunc('month',xh.fecha_movimiento)  +'1month' ::interval -'1sec' ::interval, 'yyyy-mm-dd') 
END
 || '",(SELECT to_char(cast(coalesce(max(consecutivo),"0") as int)+1,"FM09999999") from m_cli_comprobante_credito)'||','||s_tercero.ID||');'
from (
	select numero_colocacion,ced_cliente,fecha_movimiento,numero_doc,count(*)
	from xeo_historico
	group by numero_colocacion,ced_cliente,fecha_movimiento,numero_doc
	having count(*)>1
	union
	--Esto se realizo debido a que se va a tomar en cuenta solo un registro por numero del documento
	select numero_colocacion,ced_cliente,fecha_movimiento,numero_doc,1
	from xeo_historico
	where numero_colocacion in ('CAR-181','CAR-182','CAR-183','CAR-186','CAR-187','CAR-188*','FAC-102','FAC-103','FAC-104','FAC-105','FAC-107')
	) xh
	inner join (select numero_colocacion,tipo_doc
	from xeo_historico  
	WHERE transaccion like '%VIGENTE%') xhVigente 
	on xhVigente.numero_colocacion = xh.numero_colocacion
	and xh.fecha_movimiento IS NOT NULL
	inner join s_tercero on (xh.ced_cliente=s_tercero.numero
)
ORDER BY 1
--and xh.numero_colocacion='2013-02-483'

//****** Montar el s_autoriza
insert into s_autoriza(
  tipoautorizacion,
  m_rec_dependenciaid,
  m_rec_cargoid,
  s_terceroid,  
  m_cli_comprobante_creditoid)
  

  select 

  'Elaboro' tipoautorizacion ,
  m_rec_dependencia.id  m_rec_dependencia ,
  m_rec_cargo.id m_rec_cargo,
  s_tercero.id s_tercero,  
  m_cli_comprobante_credito.id m_cli_deposito
 
from  m_cli_comprobante_credito

left join m_rec_cargo_tercero on 268 = m_rec_cargo_tercero.s_terceroid
left join s_tercero on s_tercero.id = 268
left join m_rec_dependencia_m_rec_cargo on m_rec_dependencia_m_rec_cargo.id =m_rec_cargo_tercero.m_rec_dependencia_m_rec_cargoid
left join m_rec_dependencia on m_rec_dependencia.id =m_rec_dependencia_m_rec_cargo.m_rec_dependenciaid
left join m_rec_cargo on m_rec_cargo.id = m_rec_dependencia_m_rec_cargo.m_rec_cargoid

---------------------------------------------------
----m_cli_credito_aprobado
---------------------------------------------------

SELECT 
'insert into m_cli_credito_aprobado (m_cli_detalle_aprobacionid,m_cli_clasificacion_creditoid,m_cli_etapa_cobroid,
numerocredito,fecha,descripcion,consolidardeudas,tipoconsolidaciondeuda,estadocredito,estadoparaliquidacion,
formadeextincion,plazoaprobado, costoamortizado,montoaprobado,periodogracia,formadepago,modalidadpago,
numeroregistrodelcredito,fecharegistrodelcredito,diadepago,tipoamortizacion,tasainterespactada,
tipotasainteres,modoliquidacioninteres,spread,m_cli_clienteid,m_cli_fuente_pagoid,creacion,valorcuota,fechafin,periodicidadintereses) values (1,2,2,"'|| 
xh.numero_colocacion||'","'||
xh.fecha_desembolso||'","'||
xh.numero_colocacion||'",'||
false||',"'||
'No Aplica'||'","'||
'Desembolsado'||'","'||
'Normal'||'","'||
(CASE 
WHEN xh.transaccion='VIGENTE' 
	THEN 'Vigente'
WHEN xh.transaccion='CANCELADO' 
	THEN 'Pagado'
END)||'",'||
xpp.plazo||','||--plazoaprobado
false ||','|| --costo amortizado
xh.valor_desembolso ||','||--monto aprobado
0||',"'||--periodo gracia
(CASE 
WHEN xh.numero_colocacion like '%LIB%' THEN 'Descuento nómina'
ELSE 'Efectivo' 
END)||'","'||--forma de pago
xpp.modo_pago||'","'||--modalidad pago
xh.numero_colocacion||'","'||--numero Registro del credito
xh.fecha_desembolso||'",'||--fecha registro del credito
to_char(extract(day from xpp.fecha_vencimiento),'99')||',"'||--dia de pago
(CASE 
WHEN xh.numero_colocacion like '%LIB%' THEN 'Cuota creciente'
ELSE 'Cuota constante' 
END)||'",'||--tipo de amortizacion
xpp.tasa_ea||--
',"Fijo","Vencido",'||
xpp.puntos_spread||','||
m_cli_cliente.id||',2,"01-01-2017",'||
MAX (CASE 
WHEN xh.numero_colocacion like '%LIB%' THEN valor_cuota
ELSE 0 
END)||',"'||xpp.fecha_fin_credito||'","'||
(case
		when cast(pago_interes as int)=30 then 'Mensual'
		when cast(pago_interes as int)=60  then 'Bimestral'
		when cast(pago_interes as int)=90  then 'Trimestral'
		when cast(pago_interes as int)=120  then 'Cuatrimestral'
		when cast(pago_interes as int)=150  then 'Pentamestral'
		when cast(pago_interes as int)=180 then 'Semestral' 
		when cast(pago_interes as int)=210  then 'Septamestral'
		when cast(pago_interes as int)=240  then 'Octamestral'
		when cast(pago_interes as int)=270  then 'Nonamestral'
		when cast(pago_interes as int)=360 then 'Anual'
end)||'");'
from xeo_historico xh
--inner join xeo_plandepagos xpp on (xpp.numero_credito=xh.numero_colocacion and xpp.cuota=xh.cuota)
inner join xeo_plandepagos xpp on (xpp.numero_credito=xh.numero_colocacion )
inner join s_tercero on (xh.ced_cliente=s_tercero.numero)
inner join m_cli_cliente on (s_tercero.id=m_cli_cliente.s_terceroid)
where (transaccion like '%VIGENTE%')
group by 

xh.numero_colocacion,xh.fecha_desembolso,xh.numero_colocacion,(CASE 
WHEN xh.transaccion='VIGENTE' 
	THEN 'Vigente'
WHEN xh.transaccion='CANCELADO' 
	THEN 'PAGADO'
END),xpp.plazo,xh.valor_desembolso,
(CASE 
WHEN xh.numero_colocacion like '%LIB%' THEN 'Descuento nómina'
ELSE 'Efectivo' 
END),xpp.modo_pago,xh.numero_colocacion,xh.fecha_desembolso,to_char(extract(day from xpp.fecha_vencimiento),'99'),
(CASE 
WHEN xh.numero_colocacion like '%LIB%' THEN 'Cuota creciente'
ELSE 'Cuota constante' 
END),xpp.tasa_ea,xpp.puntos_spread,m_cli_cliente.id,
xpp.fecha_fin_credito,(case
		when cast(pago_interes as int)=30 then 'Mensual'
		when cast(pago_interes as int)=60  then 'Bimestral'
		when cast(pago_interes as int)=90  then 'Trimestral'
		when cast(pago_interes as int)=120  then 'Cuatrimestral'
		when cast(pago_interes as int)=150  then 'Pentamestral'
		when cast(pago_interes as int)=180 then 'Semestral' 
		when cast(pago_interes as int)=210  then 'Septamestral'
		when cast(pago_interes as int)=240  then 'Octamestral'
		when cast(pago_interes as int)=270  then 'Nonamestral'
		when cast(pago_interes as int)=360 then 'Anual'
end)

union 

SELECT distinct
'insert into m_cli_credito_aprobado (m_cli_detalle_aprobacionid,m_cli_clasificacion_creditoid,m_cli_etapa_cobroid,numerocredito,fecha,descripcion,consolidardeudas,tipoconsolidaciondeuda,estadocredito,estadoparaliquidacion,formadeextincion,plazoaprobado, costoamortizado,montoaprobado,periodogracia,formadepago,modalidadpago,numeroregistrodelcredito,fecharegistrodelcredito,diadepago,tipoamortizacion,tasainterespactada,tipotasainteres,modoliquidacioninteres,spread,m_cli_clienteid,m_cli_fuente_pagoid,creacion,valorcuota,fechafin,periodicidadintereses) values (1,2,2,"'|| 
xh.numero_colocacion||'","'||
xh.fecha_desembolso||'","'||
xh.numero_colocacion||'",'||
false||',"'||
'No Aplica'||'","'||
'Desembolsado'||'","'||
'Normal'||'","'||
(CASE 
WHEN xh.transaccion='VIGENTE' 
	THEN 'Vigente'
WHEN xh.transaccion='CANCELADO' 
	THEN 'PAGADO'
END)||'",0,'||
false ||','|| xh.valor_desembolso ||','||0||',"'||
(CASE 
WHEN xh.numero_colocacion like '%LIB%' THEN 'Descuento nómina'
ELSE 'Efectivo' 
END)||'","Mensual","'||xh.numero_colocacion||'","'||
xh.fecha_desembolso||'",0,"'||
(CASE 
WHEN xh.numero_colocacion like '%LIB%' THEN 'Cuota creciente'
ELSE 'Cuota constante' 
END)||'",0,"Fijo","Vencido",0,'||
m_cli_cliente.id||',2,"2017-01-01",0,"2016-12-31","Mensual");'
from xeo_historico xh
--inner join xeo_plandepagos xpp on (xpp.numero_credito=xh.numero_colocacion and xpp.cuota=xh.cuota)
--inner join xeo_plandepagos xpp on (xpp.numero_credito=xh.numero_colocacion )
inner join s_tercero on (xh.ced_cliente=s_tercero.numero)
inner join m_cli_cliente on (s_tercero.id=m_cli_cliente.s_terceroid)
where (transaccion like '%CANCELADO%')


//////******************************

update m_cli_credito_aprobado
set  m_cli_detalle_aprobacionid =1
where position ('LIB' in NUMEROCREDITO)>0;

update m_cli_credito_aprobado
set  m_cli_detalle_aprobacionid =2
where SUBSTRING(NUMEROCREDITO FROM 1 FOR 4) IN ('2006','2007','2008','2009','2011','2012','2013','2014','2015',2016'); --FOMENTO

update m_cli_credito_aprobado
set  m_cli_detalle_aprobacionid =3
where SUBSTRING(NUMEROCREDITO FROM 1 FOR 4)='2010'; --TESORERIA

update m_cli_credito_aprobado
set  m_cli_detalle_aprobacionid =4
where position ('FAC' in NUMEROCREDITO)>0;

update m_cli_credito_aprobado
set  m_cli_detalle_aprobacionid =6
where position ('CAR' in NUMEROCREDITO)>0;


---------------------------------------------------
----m_cli_detalle_liquidacion_cuota
---------------------------------------------------

SELECT 
	'insert into m_cli_detalle_liquidacion_cuota (m_cli_liquidacion_cuotaid,m_cli_credito_aprobadoid,
numerocuota,inicioliquidacion,
finliquidacion,fechapago,
saldoanteriorcredito,valorcuota,
saldoanteriorcapital,capitalperiodo,saldoactualcapital,
saldoanteriorcorrientes,diasinterescorriente,porcentajecorriente,interescorrienteperiodo,saldoactualcorriente,
saldoanteriormoratorios,diasmora,interesmoratorioperiodo,porcentajemora,saldoactualmoratorios,cuotaseguro,
saldoactualseguro,saldonuevocredito,creacion,saldoanteriorseguro,abonocapital,abonocorriente,abonomoratorios,
abonoseguro) values ('||mclc.id||','||--m_cli_liquidacion_cuotaid
	mcca.id ||',"'||--m_cli_credito_aprobadoid
	xpp.cuota ||'","'||--numerocuota
	To_char(xpp.fecha_vencimiento  -(to_char(mcca.mesespago,'99')||'month') ::interval , 'yyyy-mm-dd')||'","'||--inicioliquidacion
	xpp.fecha_vencimiento||'","'||--finliquidacion
	To_char(date_trunc('month',xpp.fecha_vencimiento )  +'1month' ::interval -'1sec' ::interval, 'yyyy-mm-dd')||'",'||--fechapago
	0 ||','||--saldoanteriorcredito
	coalesce(xpp.valor_capital,0)+coalesce(xpp.valor_interes,0)||','||--valorcuota
	0 ||','||--saldoanteriorcapital
	coalesce(xpp.valor_capital,0) ||','||--capitalperiodo
	0||','||--saldoactualcapital
	0||',"'||--saldoanteriorcorrientes
	xpp.pago_interes||'",'||--diasinterescorriente
	coalesce(xpp.tasa_periodo,0) ||','||--porcentajecorriente
	coalesce(xpp.valor_interes,0) ||','||--interescorrienteperiodo
	0 ||','||--saldoactualcorriente 
	0 ||','||--Saldo anterior moratorio , tabla diana
	0 ||','||--dias mora, tabla diana
	0 ||','||--interesmoratorioperiodo
	0 ||','||--porcentajemora
	0 ||','||--saldoactualmoratorios
	coalesce(valor_seguro,0) ||','||--cuotaseguro
	0 ||','||--saldoactualseguro
	0 ||',"'|| --saldonuevocredito
	'01-01-2017'||'",'||--creacion
	0 || ','||--saldoanteriorseguro
	coalesce(xh.deuda,0) ||','||--abonocapital
	coalesce(xh.interes_corriente,0) ||','||--abonocorriente
	coalesce(xh.mora,0) ||','||--abonomoratorios
	coalesce(xh.seguro,0) ||');'--abonoseguro
from 	
	xeo_plandepagos xpp
inner join 
	(
		select ced_cliente,numero_colocacion,cuota,valor_desembolso,
		SUM(case
		when POSITION( 'Int.' IN transaccion)>0
			then VALOR_TRANSACCION end)  interes_corriente,
		sum(case
		when POSITION( 'Seguro' IN transaccion)>0 
			then valor_transaccion end ) seguro,
		sum(case
		when POSITION( 'Deuda' IN transaccion)>0  
			then valor_transaccion end ) deuda,
		sum(case
		when POSITION( 'Mora' IN transaccion)>0  
			then valor_transaccion end ) mora,
		sum(saldo_capital)
		from xeo_historico
		where cuota is not null
		group by 1,2,3,4
	) xh
		on (xh.numero_colocacion = xpp.numero_credito and CAST(COALESCE(xh.cuota,'0')AS INTEGER) = CAST(COALESCE(xpp.cuota,'0') AS INTEGER) )
inner join 
	(select 
	substring(descripcion from position ('Num.Credito:' in descripcion)+12 for char_length(descripcion)) as credito,id
	from m_cli_liquidacion_cuota) mclc
		on (trim(xpp.numero_credito) = trim(mclc.credito))
inner join 
	(select id,numerocredito,
		(case
		when modalidadpago='Mensual' then 1
		when modalidadpago='Bimestral' then 2
		when modalidadpago='Trimestral' then  3
		when modalidadpago='Cuatrimestral' then  4
		when modalidadpago='Pentamestral' then  5
		when modalidadpago='Semestral' then 6
		when modalidadpago='Septamestral' then 7
		when modalidadpago='Octamestral' then 8
		when modalidadpago='Nonamestral' then 9
		when modalidadpago='Anual' then  12
		end) mesespago
		from m_cli_credito_aprobado
		where upper(formadeextincion) like '%VIGENTE%'
	) mcca
		on (trim(mcca.numerocredito)=trim(xpp.numero_credito))
union
SELECT 
	'insert into m_cli_detalle_liquidacion_cuota (
	m_cli_liquidacion_cuotaid,	m_cli_credito_aprobadoid,
	numerocuota,	inicioliquidacion,
	finliquidacion,	fechapago,
	saldoanteriorcredito,	valorcuota,
	saldoanteriorcapital,	capitalperiodo,
	saldoactualcapital,	saldoanteriorcorrientes,
	diasinterescorriente, porcentajecorriente,
	interescorrienteperiodo, saldoactualcorriente,
	saldoanteriormoratorios, diasmora,
	interesmoratorioperiodo, porcentajemora,
	saldoactualmoratorios, cuotaseguro,
	saldoactualseguro, saldonuevocredito,
	creacion, saldoanteriorseguro,
	abonocapital, abonocorriente,
	abonomoratorios, abonoseguro) values ('||mclc.id||','|| 	--mclc.id
	mcca.id ||',"'||		--mca.id
	xpp.cuota ||'","'||		--numerocuota
	To_char(xpp.fecha_vencimiento  -(to_char(mcca.mesespago,'99')||'month') ::interval , 'yyyy-mm-dd')||'","'||	--inicioliquidacion
	xpp.fecha_vencimiento||'","'||		--finliquidacion
	To_char(date_trunc('month',xpp.fecha_vencimiento )  +'1month' ::interval -'1sec' ::interval, 'yyyy-mm-dd')||'",'||	--fechapago
	0 ||','||		--saldoanteriorcredito
	coalesce(xpp.valor_capital,0)+coalesce(xpp.valor_interes,0) ||','||	--valorcuota
	0 ||','||	--saldoanteriorcapital
	coalesce(xpp.valor_capital,0) ||','||	--capitalperiodo
	0 ||','||	--saldoactualcapital
	0 ||',"'||	--saldoanteriorcorrientes
	xpp.pago_interes||'",'||--diasinterescorriente
	coalesce(xpp.tasa_periodo,0)  ||','||	--porcentajecorriente
	coalesce(xpp.valor_interes,0) ||','||	--interescorrienteperiodo
	0 ||','|| 			--saldoactualcorriente
	0 ||','|| 			--saldoanteriormoratorios
	0 ||','|| 			--dias mora, tabla diana
	0 ||','||			--interesmoratorioperiodo
	0 ||','||			--porcentajemora
	0 ||','||			--saldoactualmoratorios
	coalesce(valor_seguro,0)     ||','||	--cuotaseguro
	0 ||','||								--saldoactualseguro
	0 ||',"'|| 								--saldonuevocredito
	'01-01-2017'||'",'||					--creacion
	0 || ','||								--saldoanteriorseguro
	0 ||','||								--abonocapital
	0 ||','||								--abonocorriente
	0 ||','||								--abonomoratorios
	0 ||');'								--abonoseguro
from
	xeo_plandepagos xpp
inner join 
	(
		select numero_colocacion,max (CAST(cuota AS INTEGER)) cuota
		from xeo_historico
		where cuota is not null
		group by numero_colocacion		
	) xh
		on (xh.numero_colocacion = xpp.numero_credito and CAST(xpp.cuota AS INTEGER)>CAST(xh.cuota AS INTEGER) )
inner join 
	(select 
	substring(descripcion from position ('Num.Credito:' in descripcion)+12 for char_length(descripcion)) as credito,id
	from m_cli_liquidacion_cuota) mclc
		on (trim(xpp.numero_credito) = trim(mclc.credito))
inner join 
	(select id,numerocredito,
		(case
		when modalidadpago='Mensual' then 1
		when modalidadpago='Bimestral' then 2
		when modalidadpago='Trimestral' then  3
		when modalidadpago='Cuatrimestral' then  4
		when modalidadpago='Pentamestral' then  5
		when modalidadpago='Semestral' then 6
		when modalidadpago='Septamestral' then 7
		when modalidadpago='Octamestral' then 8
		when modalidadpago='Nonamestral' then 9
		when modalidadpago='Anual' then  12
		end) mesespago
		from m_cli_credito_aprobado
		where upper(formadeextincion) like '%VIGENTE%'
	) mcca
		on (trim(mcca.numerocredito)=trim(xpp.numero_credito))
UNION
SELECT 
	'insert into m_cli_detalle_liquidacion_cuota (m_cli_liquidacion_cuotaid,m_cli_credito_aprobadoid,
numerocuota,inicioliquidacion,
finliquidacion,fechapago,
saldoanteriorcredito,valorcuota,
saldoanteriorcapital,capitalperiodo,saldoactualcapital,
saldoanteriorcorrientes,diasinterescorriente,porcentajecorriente,interescorrienteperiodo,saldoactualcorriente,
saldoanteriormoratorios,diasmora,interesmoratorioperiodo,porcentajemora,saldoactualmoratorios,cuotaseguro,
saldoactualseguro,saldonuevocredito,creacion,saldoanteriorseguro,abonocapital,abonocorriente,abonomoratorios,
abonoseguro) values ('||
	mclc.id||','||
	mcca.id ||',"'||
	xpp.cuota ||'","'||
	To_char(xpp.fecha_vencimiento  -(to_char(mcca.mesespago,'99')||'month') ::interval , 'yyyy-mm-dd')||'","'||
	xpp.fecha_vencimiento||'","'||
	To_char(date_trunc('month',xpp.fecha_vencimiento )  +'1month' ::interval -'1sec' ::interval, 'yyyy-mm-dd')||'",'||
	0||','||--saldoanteriorcredito
	coalesce(xpp.valor_capital,0) + coalesce(xpp.valor_interes,0) ||','||--valorcuota
	0 ||','||--saldoanteriorcapital
	coalesce(xpp.valor_capital,0) ||','||--capitalperiodo
	0 ||','||--saldoactualcapital
	0 ||',"'||--saldoanteriorcorrientes
	xpp.pago_interes	      ||'",'||--diasinterescorriente
	coalesce(xpp.tasa_periodo,0)  ||','||--porcentajecorriente
	coalesce(xpp.valor_interes,0) ||','||--interescorrienteperiodo
	0 ||','|| --saldoactualcorriente
	0 ||','|| --Saldo anterior moratorio , tabla diana
	0 ||','|| --diasmora
	0 ||','|| --interesmoratorioperiodo
	0 ||','|| --porcentajemora
	0 ||','|| --saldoactualmoratorios
	coalesce(valor_seguro,0)     ||','|| --cuotaseguro
	0||','|| --saldoactualseguro
	0 ||',"'|| --saldonuevocredito
	'01-01-2017'||'",'|| --creacion
	0 || ','|| -- saldoanteriorseguro
	0 ||','|| --abonocapital
	0 ||','|| --abonocorriente
	0 ||','|| --abonomoratorios
	0 ||');' --abonoseguro
from
	xeo_plandepagos xpp
inner join 
	(
	SELECT NUMERO_COLOCACION,COUNT(COALESCE(CUOTA,'0'))
		FROM XEO_HISTORICO
		WHERE numero_colocacion not in ('LIB-0002395','LIB-0002463','LIB-0002465','LIB-0002470','LIB-0002763')
		GROUP BY NUMERO_COLOCACION
		HAVING COUNT(COALESCE(CUOTA,'0'))=1
	
	) xh
		on (xh.numero_colocacion = xpp.numero_credito )
inner join 
	(select 
	substring(descripcion from position ('Num.Credito:' in descripcion)+12 for char_length(descripcion)) as credito,id
	from m_cli_liquidacion_cuota) mclc
		on (trim(xpp.numero_credito) = trim(mclc.credito))
inner join 
	(select id,numerocredito,
		(case
		when modalidadpago='Mensual' then 1
		when modalidadpago='Bimestral' then 2
		when modalidadpago='Trimestral' then  3
		when modalidadpago='Cuatrimestral' then  4
		when modalidadpago='Pentamestral' then  5
		when modalidadpago='Semestral' then 6
		when modalidadpago='Septamestral' then 7
		when modalidadpago='Octamestral' then 8
		when modalidadpago='Nonamestral' then 9
		when modalidadpago='Anual' then  12
		end) mesespago
		from m_cli_credito_aprobado
		where upper(formadeextincion) like '%VIGENTE%'
	) mcca
		on (trim(mcca.numerocredito)=trim(xpp.numero_credito))

---------------------------------------------------
----m_cli_detalle_liquidacion_cuota	updates de mora
---------------------------------------------------


//////******************************
//////***************************************
//////******************************************** 


Ejecutar los archivos de TOTAL - MORA (correo electrónico).

 
//////*********************************************
//////***************************************
//////******************************


UPDATE M_CLI_DETALLE_LIQUIDACION_CUOTA MCDLC */
SET 
	porcentajemora=((32.985/100)/360)*diasmora
FROM M_CLI_LIQUIDACION_CUOTA MCLC
WHERE MCLC.ID=MCDLC.M_CLI_LIQUIDACION_CUOTAID 
--AND mcdlc.NUMEROCUOTA=
--AND substring(MCLC.descripcion from position ('Num.Credito:' in MCLC.descripcion)+12 for char_length(MCLC.descripcion)) = '2006-02-335'

UPDATE M_CLI_DETALLE_LIQUIDACION_CUOTA MCDLC */
SET 
	interesmoratorioperiodo=ROUND(((32.985/100)/360)*diasmora*saldoactualcapital)
FROM M_CLI_LIQUIDACION_CUOTA MCLC
WHERE MCLC.ID=MCDLC.M_CLI_LIQUIDACION_CUOTAID 

/*update 
	m_cli_detalle_liquidacion_cuota 
set
	saldoanteriormoratorios = 
					coalesce((
					select 
						sum(k1.interesmoratorioperiodo) 
					from 
						m_cli_detalle_liquidacion_cuota k1
					where 
						k1.m_cli_liquidacion_cuotaid = m_cli_detalle_liquidacion_cuota.m_cli_liquidacion_cuotaid
					and
						k1.m_cli_credito_aprobadoid  = m_cli_detalle_liquidacion_cuota.m_cli_credito_aprobadoid 
					and 
						cast(k1.numerocuota as integer)<cast(m_cli_detalle_liquidacion_cuota.numerocuota as integer)
					),0)*/
					



---------------------------------------------------					
----m_cli_detalle_liquidacion_cuota saldos actuales
---------------------------------------------------

update 
	m_cli_detalle_liquidacion_cuota 
set 
	saldoactualcapital = coalesce(capitalperiodo,0) - coalesce(abonocapital,0);

update 
	m_cli_detalle_liquidacion_cuota 
set 
	saldoactualcorriente = coalesce(INTERESCORRIENTEPERIODO,0) - coalesce(ABONOCORRIENTE,0);

	update 
	m_cli_detalle_liquidacion_cuota 
set 
	saldoactualmoratorios = coalesce(interesmoratorioperiodo,0) - coalesce(abonomoratorios,0);
	
update 
	m_cli_detalle_liquidacion_cuota 
set 
	saldoactualseguro = coalesce(cuotaseguro,0) - coalesce(abonoseguro,0);

	
update 
	m_cli_detalle_liquidacion_cuota */
set 
	saldonuevocredito = coalesce(saldoactualcapital,0) 	+ 
						coalesce(saldoactualcorriente,0) 			+ 
						coalesce(saldoactualmoratorios,0) + 
						coalesce(saldoactualseguro,0) ;

						
---------------------------------------------------
----m_cli_detalle_LIQUIDACION_CUOTA						
---------------------------------------------------						

update 
	m_cli_detalle_liquidacion_cuota
set
	saldoactualcapital = 	
					coalesce((select 
						sum(k1.saldoactualcapital) 
					from 
						m_cli_detalle_liquidacion_cuota k1
					where 
						k1.m_cli_liquidacion_cuotaid = m_cli_detalle_liquidacion_cuota.m_cli_liquidacion_cuotaid
					and
						k1.m_cli_credito_aprobadoid  = m_cli_detalle_liquidacion_cuota.m_cli_credito_aprobadoid 
					and 
						cast(k1.numerocuota as integer)<=cast(m_cli_detalle_liquidacion_cuota.numerocuota as integer)),0)
						

		select MAX(CAST(cuota AS INTEGER))
		FROM XEO_HISTORICO xh 
		INNER JOIN m_cli_liquidacion_cuota mclc
		on (trim(xh.numero_colocacion) = trim(substring(mclc.descripcion from position ('Num.Credito:' in mclc.descripcion)+12 for char_length(mclc.descripcion)) ))
		inner join m_cli_detalle_liquidacion_cuota mcdlc
		on (mclc.id=mcdlc.m_cli_liquidacion_cuotaid)
		where xh.numero_colocacion='LIB-0001627'


---------------------------------------------------
----m_cli_detalle_comprobante_credito						
---------------------------------------------------

select 
'insert into m_cli_detalle_comprobante_credito 
(m_cli_comprobante_creditoid,m_cli_credito_aprobadoid,creacion,m_cli_detalle_liquidacion_cuotaid,descripcion,valor)
values 
('||mccc.id||','||mcca.id||',"'||'01-01-2017'||'",'||mcdlc.id||',"'||mccc.descripcion||'",'||xh.valor||');'
from
(select numero_colocacion,fecha_movimiento,cuota,sum(coalesce(valor_transaccion,0)) valor
from xeo_historico
where (upper(transaccion) not like ('%VIGENTE%') 
and upper(transaccion) not like ('%CANCELADO%'))
group by 1,2,3) xh

inner join 
	(select id,numerocredito
		from m_cli_credito_aprobado
		where upper(formadeextincion) like '%VIGENTE%'
	) mcca
		on (trim(mcca.numerocredito)=trim(xh.numero_colocacion) )

inner join 
	m_cli_detalle_liquidacion_cuota mcdlc
		on (mcdlc.m_cli_credito_aprobadoid=mcca.id) and (cast(xh.cuota as integer)=mcdlc.numerocuota)
					
inner join 
	(select 
	descripcion,substring(descripcion from position ('Num.Credito:' in descripcion)+12 for char_length(descripcion)) as credito,id,
	fecha
	from m_cli_comprobante_credito) mccc
		on (trim(xh.numero_colocacion) = trim(mccc.credito) and (mccc.fecha=xh.fecha_movimiento))

---------------------------------------------------		
----m_cli_kardex_credito
---------------------------------------------------
select 
	--xpp2.numero_credito,xh.numero_colocacion,xpp2.cuota,
	'insert into m_cli_kardex_credito 
	(m_cli_detalle_comprobante_creditoid,
	s_tipo_documentoid,s_tipo_movimientoid,s_vigenciavigencia,s_periodoperiodo,
	fechatransaccion, 
	username,
	creacion,
	m_cli_credito_aprobadoid,
	acumuladocargocapital,
	acumuladoabonocapital,
	acumuladomoragenerada,
	acumuladoabonomora,
	acumuladocorrientegenerado,
	acumuladoabonocorriente,
	acumuladocuotaseguro,
	acumuladoabonoseguro,
	fecharealdepago,
	m_cli_detalle_liquidacion_cuotaid,
	valortransaccion,
	capitalperiodo,
	abonocapital,
	interescorrienteperiodo,
	abonocorriente,
	interesmoratorioperiodo,
	abonomoratorios,
	cuotaseguro,
	abonoseguro,
	estado) values ('||
	mcdcc.id||--m_cli_detalle_comprobante_creditoid
	',42,187,2017,1,"'||--s_tipo_documentoid,s_tipo_movimientoid,s_vigenciavigencia,s_periodoperiodo,	
	xh.fecha_movimiento||'","'||--fecha_transaccion
	'admin@siep.com'||'","'||--username
	'01-01-2017'||'",'||--creacion
	mcca.id||','||
	xh.valor_desembolso  ||','|| --coalesce(xh.interes_corriente,0)+coalesce(xh.seguro,0)+coalesce(xh.deuda,0)+coalesce(xh.mora,0) ||','||--acumulado cargo capital
	coalesce(xh.deuda,0)||','||--acumulado abono capital
	coalesce(mcdlc.saldoanteriormoratorios,0)||','||--xmora.valor_mora;tabla diana mora acumuladomoragenerada
	COALESCE(xh.mora,0)||','||--xmora.mora; acumuladoabonomora
	coalesce(xpp2.acumulado_interes,0)||','||--acumulado corriente gene
	coalesce(xh.interes_corriente,0)||','||--acumulado abono corriente
	coalesce(xpp2.acumulado_seguro,0)||','||--acumulado cuota seguro
	coalesce(xh.seguro,0)||',"'||--acumulado abono seguro
	xh.fecha_movimiento||'",'||--fecha_real_de pago
	mcdlc.id||','||--m_cli_detalle_liquidacion_cuotaid
	coalesce(xh.interes_corriente,0)+coalesce(xh.seguro,0)+coalesce(xh.deuda,0)+coalesce(xh.mora,0)||','||--valor_transaccion
	coalesce(xpp2.valor_capital,0)||','||--capitalperiodo
	coalesce(xh.deuda,0)||','||--abono capital
	coalesce(xpp2.valor_interes,0)||','||--interes corriente periodo
	coalesce(xh.interes_corriente,0)||','||--abono corriente
	coalesce(mcdlc.interesmoratorioperiodo,0)||','|| --interes moratorio periodo
	COALESCE(xh.mora,0)||','||--xmora.mora;abono moratorios
	coalesce(xpp2.valor_seguro,0)||','|| --cuota seguro
	coalesce(xh.Seguro,0)||',"'|| --abono seguro
	'Autorizado'||'");'--estado	
from 
	(select xpp.id,xpp.numero_credito,xpp.cuota,
		xpp.valor_cuota,
			(select sum(valor_cuota) 
				from 
				xeo_plandepagos xpp1
			where xpp1.id<=xpp.id and xpp.numero_credito=xpp1.numero_credito) acumulado_cuota,
		xpp.valor_interes,
		(select sum(valor_interes)
				from 
				xeo_plandepagos xpp1
			where xpp1.id<=xpp.id and xpp.numero_credito=xpp1.numero_credito) acumulado_interes,
		xpp.valor_capital,
		(select sum(valor_capital)
				from 
				xeo_plandepagos xpp1
			where xpp1.id<=xpp.id and xpp.numero_credito=xpp1.numero_credito) acumulado_capital,
		xpp.valor_saldo,
		(select sum(valor_saldo)
				from 
				xeo_plandepagos xpp1
			where xpp1.id<=xpp.id and xpp.numero_credito=xpp1.numero_credito) acumulado_saldo,
		xpp.valor_seguro,
		(select sum(valor_seguro)
				from 
				xeo_plandepagos xpp1
			where xpp1.id<=xpp.id and xpp.numero_credito=xpp1.numero_credito) acumulado_seguro	
		from xeo_plandepagos xpp
		order by xpp.numero_credito,xpp.id
	) xpp2
inner join  (select xeoh.numero_colocacion,cuota,
		coalesce(xeoh2.valor_desembolso,0) valor_desembolso,
		fecha_movimiento,
		SUM(case
		when POSITION( 'Int.' IN transaccion)>0
			then coalesce(VALOR_TRANSACCION,0) end)interes_corriente,
		sum(case
		when POSITION( 'Seguro' IN transaccion)>0 
			then coalesce(valor_transaccion,0) end ) seguro,
		sum(case
		when POSITION( 'Deuda' IN transaccion)>0  
			then coalesce(valor_transaccion,0) end ) deuda,
		sum(case
		when POSITION( 'Mora' IN transaccion)>0  
			then coalesce(valor_transaccion,0) end ) mora,
		sum(saldo_capital) capital
		from xeo_historico xeoh
		inner join (select numero_colocacion,valor_desembolso
		 from xeo_historico
		 where cuota is null)xeoh2
		on ( xeoh2.numero_colocacion=xeoh.numero_colocacion )
		where cuota is not null --and xeoh.numero_colocacion='LIB-0002001'
		group by 1,2,3,4		
	) xh
	on (xh.numero_colocacion=xpp2.numero_credito and xh.cuota=xpp2.cuota)
		
inner join 
	(select 
	descripcion,substring(descripcion from position ('Num.Credito:' in descripcion)+12 for char_length(descripcion)) as credito,id,
	fecha
	from m_cli_comprobante_credito) mccc
		on (trim(xh.numero_colocacion) = trim(mccc.credito) and (mccc.fecha=xh.fecha_movimiento))

inner join 
	(select id,numerocredito,
		(case
		when modalidadpago='Mensual' then 1
		when modalidadpago='Bimestral' then 2
		when modalidadpago='Trimestral' then  3
		when modalidadpago='Cuatrimestral' then  4
		when modalidadpago='Pentamestral' then  5
		when modalidadpago='Semestral' then 6
		when modalidadpago='Septamestral' then 7
		when modalidadpago='Octamestral' then 8
		when modalidadpago='Nonamestral' then 9
		when modalidadpago='Anual' then  12
		end) mesespago
		from m_cli_credito_aprobado mcca
		--where upper(formadeextincion) like '%VIGENTE%'
	) mcca
	on (trim(mcca.numerocredito)=trim(xpp2.numero_credito))	

inner join 
	(select 
		substring(descripcion from position ('Num.Credito:' in descripcion)+12 for char_length(descripcion)) as credito,id
		from m_cli_liquidacion_cuota) mclc
			on (trim(xpp2.numero_credito) = trim(mclc.credito))

inner join 
	m_cli_detalle_liquidacion_cuota mcdlc 
		on (mcdlc.m_cli_credito_aprobadoid=mcca.id) and (cast(xpp2.cuota as integer)=mcdlc.numerocuota)
		

inner join 
	m_cli_detalle_comprobante_credito mcdcc
		on (mcdcc.m_cli_comprobante_creditoid = mccc.id
			 and mcdcc.m_cli_credito_aprobadoid=mcca.id
			 and mcdcc.m_cli_detalle_liquidacion_cuotaid=mcdlc.id)
			 			 			 
---------------------------------------------------	
///Consultar para verificar los updates que siguen.
---------------------------------------------------	

select * from m_cli_kardex_credito
order by m_cli_credito_aprobadoid

			 
---------------------------------------------------			 
---- m_cli_kardex_credito 1. --acumuladomoragenerada viene de detalle liquidacion cuota.
---------------------------------------------------
/*update 
	m_cli_kardex_credito
set
	acumuladomoragenerada = 	
					coalesce((select 
						sum(k1.acumuladomoragenerada) 
					from 
						m_cli_kardex_credito k1
					inner join m_cli_detalle_liquidacion_cuota dlc1 
							on ( k1.m_cli_detalle_liquidacion_cuotaid=dlc1.id)
					where 
						k1.m_cli_credito_aprobadoid = m_cli_kardex_credito.m_cli_credito_aprobadoid
					and 
						dlc1.numerocuota<=dlc2.numerocuota
					and 
						k1.FECHATRANSACCION<=m_cli_kardex_credito.FECHATRANSACCION ),0)
						
from m_cli_detalle_liquidacion_cuota dlc2
where ( m_cli_kardex_credito.m_cli_detalle_liquidacion_cuotaid=dlc2.id)*/

---------------------------------------------------
---- m_cli_kardex_credito 2.
--------------------------------------------------- 
update 
	m_cli_kardex_credito
set
	acumuladoabonocapital = 	
					coalesce((select 
						sum(k1.acumuladoabonocapital) 
					from 
						m_cli_kardex_credito k1
					inner join m_cli_detalle_liquidacion_cuota dlc1 
							on ( k1.m_cli_detalle_liquidacion_cuotaid=dlc1.id)
					where 
						k1.m_cli_credito_aprobadoid = m_cli_kardex_credito.m_cli_credito_aprobadoid
					and 
						dlc1.numerocuota<=dlc2.numerocuota
					and 
						k1.FECHATRANSACCION<=m_cli_kardex_credito.FECHATRANSACCION),0)
						
from m_cli_detalle_liquidacion_cuota dlc2
where ( m_cli_kardex_credito.m_cli_detalle_liquidacion_cuotaid=dlc2.id)

---------------------------------------------------
---- m_cli_kardex_credito 3.
---------------------------------------------------
/*
No se debe realizar debido a que ya viene dado desde plan de pagos.
update 
	m_cli_kardex_credito
set
	acumuladocorrientegenerado = 	
					coalesce((select 
						sum(k1.acumuladocorrientegenerado) 
					from 
						m_cli_kardex_credito k1
					inner join m_cli_detalle_liquidacion_cuota dlc1 
							on ( k1.m_cli_detalle_liquidacion_cuotaid=dlc1.id)
					where 
						k1.m_cli_credito_aprobadoid = m_cli_kardex_credito.m_cli_credito_aprobadoid
					and 
						dlc1.numerocuota<=dlc2.numerocuota
					and 
						k1.FECHATRANSACCION<=m_cli_kardex_credito.FECHATRANSACCION ),0)
						
from m_cli_detalle_liquidacion_cuota dlc2
where ( m_cli_kardex_credito.m_cli_detalle_liquidacion_cuotaid=dlc2.id)*/

---------------------------------------------------
---- m_cli_kardex_credito 4.
---------------------------------------------------
update 
	m_cli_kardex_credito
set
	acumuladoabonocorriente = 	
					coalesce((select 
						sum(k1.acumuladoabonocorriente) 
					from 
						m_cli_kardex_credito k1
					inner join m_cli_detalle_liquidacion_cuota dlc1 
							on ( k1.m_cli_detalle_liquidacion_cuotaid=dlc1.id)
					where 
						k1.m_cli_credito_aprobadoid = m_cli_kardex_credito.m_cli_credito_aprobadoid
					and 
						dlc1.numerocuota<=dlc2.numerocuota
					and 
						k1.FECHATRANSACCION<=m_cli_kardex_credito.FECHATRANSACCION ),0)
						
from m_cli_detalle_liquidacion_cuota dlc2
where ( m_cli_kardex_credito.m_cli_detalle_liquidacion_cuotaid=dlc2.id)

---------------------------------------------------
---- m_cli_kardex_credito 5.
---------------------------------------------------
/*update 
	m_cli_kardex_credito
set
	acumuladocuotaseguro = 	
					coalesce((select 
						sum(k1.acumuladocuotaseguro) 
					from 
						m_cli_kardex_credito k1
					inner join m_cli_detalle_liquidacion_cuota dlc1 
							on ( k1.m_cli_detalle_liquidacion_cuotaid=dlc1.id)
					where 
						k1.m_cli_credito_aprobadoid = m_cli_kardex_credito.m_cli_credito_aprobadoid
					and 
						dlc1.numerocuota<=dlc2.numerocuota
					and 
						k1.FECHATRANSACCION<=m_cli_kardex_credito.FECHATRANSACCION),0)
						
from m_cli_detalle_liquidacion_cuota dlc2
where ( m_cli_kardex_credito.m_cli_detalle_liquidacion_cuotaid=dlc2.id)*/

---------------------------------------------------
---- m_cli_kardex_credito 6.
---------------------------------------------------
update 
	m_cli_kardex_credito
set
	acumuladoabonoseguro = 	
					coalesce((select 
						sum(k1.acumuladoabonoseguro) 
					from 
						m_cli_kardex_credito k1
					inner join m_cli_detalle_liquidacion_cuota dlc1 
							on ( k1.m_cli_detalle_liquidacion_cuotaid=dlc1.id)
					where 
						k1.m_cli_credito_aprobadoid = m_cli_kardex_credito.m_cli_credito_aprobadoid
					and 
						dlc1.numerocuota<=dlc2.numerocuota
					and 
						k1.FECHATRANSACCION<=m_cli_kardex_credito.FECHATRANSACCION),0)
						
from m_cli_detalle_liquidacion_cuota dlc2
where ( m_cli_kardex_credito.m_cli_detalle_liquidacion_cuotaid=dlc2.id)

---------------------------------------------------
---- m_cli_kardex_credito 7.
---------------------------------------------------
/*update 
	m_cli_kardex_credito
set
	acumuladocargocapital = 	
					coalesce((select 
						sum(k1.acumuladocargocapital) 
					from 
						m_cli_kardex_credito k1
					inner join m_cli_detalle_liquidacion_cuota dlc1 
							on ( k1.m_cli_detalle_liquidacion_cuotaid=dlc1.id)
					where 
						k1.m_cli_credito_aprobadoid = m_cli_kardex_credito.m_cli_credito_aprobadoid
					and 
						dlc1.numerocuota<=dlc2.numerocuota
					and 
						k1.FECHATRANSACCION<=m_cli_kardex_credito.FECHATRANSACCION),0)
						
from m_cli_detalle_liquidacion_cuota dlc2
where ( m_cli_kardex_credito.m_cli_detalle_liquidacion_cuotaid=dlc2.id)*/

---------------------------------------------------
---- m_cli_kardex_credito 8.
---------------------------------------------------
update 
	m_cli_kardex_credito
set
	acumuladoabonomora = 	
					coalesce((select 
						sum(k1.acumuladoabonomora) 
					from 
						m_cli_kardex_credito k1
					inner join m_cli_detalle_liquidacion_cuota dlc1 
							on ( k1.m_cli_detalle_liquidacion_cuotaid=dlc1.id)
					where 
						k1.m_cli_credito_aprobadoid = m_cli_kardex_credito.m_cli_credito_aprobadoid
					and 
						dlc1.numerocuota<=dlc2.numerocuota
					and 
						k1.FECHATRANSACCION<=m_cli_kardex_credito.FECHATRANSACCION ),0)
						
from m_cli_detalle_liquidacion_cuota dlc2
where ( m_cli_kardex_credito.m_cli_detalle_liquidacion_cuotaid=dlc2.id)

---------------------------------------------------
--- m_cli_kardex_cuota						
---------------------------------------------------
SELECT 
	'insert into m_cli_kardex_cuota (m_cli_kardex_creditoid,m_cli_detalle_liquidacion_cuotaid,abonomoratorios,abonocorriente,abonocapital,abonoseguro,creacion)values ('||
	mckc.id||','||
	mcdlc.id||','||
	0||','||--coalesce(xh.mora,0)
	coalesce(xh.interes_corriente,0)||','||
	coalesce(xh.deuda,0)||','||
	coalesce(xh.seguro,0)||',"'||'01-01-2017'||'");'

from    (
	select numero_colocacion,cuota,valor_desembolso,fecha_movimiento,
		SUM(case
		when POSITION( 'Int.' IN transaccion)>0
			then coalesce(VALOR_TRANSACCION,0) end)interes_corriente,
		sum(case
		when POSITION( 'Seguro' IN transaccion)>0 
			then coalesce(valor_transaccion,0) end ) seguro,
		sum(case
		when POSITION( 'Deuda' IN transaccion)>0  
			then coalesce(valor_transaccion,0) end ) deuda,
		sum(case
		when POSITION( 'Mora' IN transaccion)>0  
			then coalesce(valor_transaccion,0) end ) mora,
		sum(saldo_capital) capital
		from xeo_historico
		where cuota is not null
		group by 1,2,3,4
		
	) xh
		
inner join 
	(select 
	descripcion,fecha,substring(descripcion from position ('Num.Credito:' in descripcion)+12 for char_length(descripcion)) as credito,id
	from m_cli_comprobante_credito) mccc
	on (trim(xh.numero_colocacion) = trim(mccc.credito) and (mccc.fecha=xh.fecha_movimiento))

inner join 
	(select id,numerocredito
		from m_cli_credito_aprobado
	) mcca
	on (trim(mcca.numerocredito)=trim(xh.numero_colocacion))	

inner join 
	(select 
		substring(descripcion from position ('Num.Credito:' in descripcion)+12 for char_length(descripcion)) as credito,id
		from m_cli_liquidacion_cuota) mclc
			on (trim(xh.numero_colocacion) = trim(mclc.credito))
		
inner join 
	m_cli_detalle_liquidacion_cuota mcdlc
		on (mcdlc.m_cli_credito_aprobadoid=mcca.id) and (cast(xh.cuota as integer)=mcdlc.numerocuota)

inner join 
	m_cli_detalle_comprobante_credito mcdcc
		on (mcdcc.m_cli_comprobante_creditoid = mccc.id
			 and mcdcc.m_cli_credito_aprobadoid=mcca.id
			 and mcdcc.m_cli_detalle_liquidacion_cuotaid=mcdlc.id)

inner join 
	m_cli_kardex_credito mckc
		on (mckc.m_cli_detalle_comprobante_creditoid=mcdcc.id
			and mckc.m_cli_credito_aprobadoid=mcca.id
			and mckc.m_cli_detalle_liquidacion_cuotaid=mcdlc.id)

						
						
////Delete tablas
//delete from m_cli_kardex_cuota;
//delete from m_cli_kardex_credito;
//delete from m_cli_detalle_comprobante_credito;
//delete from m_cli_detalle_liquidacion_cuota;
//delete from m_cli_comprobante_credito;
//delete from m_cli_liquidacion_cuota;
//delete from m_cli_credito_aprobado;
//DELETE FROM XEO_HISTORICO
//DELETE FROM XEO_PLANDEPAGOS




